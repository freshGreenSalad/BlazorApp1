@using BlazorApp1.Client.features.addForm.presentation.QuestionList
@using BlazorApp1.Client.features.addForm.presentation.QuestionList.quesitons.MultiChoiceQuestions
@using BlazorApp1.Client.features.addForm.presentation.QuestionList.quesitons.singleAnswerQuestions
@using BlazorApp1.Shared
@using System.Collections.Generic;

<div style="height:500px;overflow-y:scroll">
    @foreach (Question question in @questionList ?? new List<Question>())
    {
        switch (question.QuestionType)
        {
            case QuestionType.TextQuestion:
                <TextQuestionComposable quesitonNumber="question.QuestionNumber" QuestionText="@question.question" SetQuestion="SetQuestion"></TextQuestionComposable>
                break;
            case QuestionType.NumberQuestion:
                <NumberQuestionComposable quesitonNumber="question.QuestionNumber" QuestionText="@question.question" SetQuestion="SetQuestion"></NumberQuestionComposable>
                break;
            case QuestionType.RadioQuestion:
                <RadioQuestionComposable quesitonNumber="question.QuestionNumber" SetQuestion="SetQuestion"></RadioQuestionComposable>
                break;
            case QuestionType.BooleanQuestion:
                <BooleanQuestionComposable quesitonNumber="question.QuestionNumber" QuestionText="@question.question" SetQuestion="SetQuestion"></BooleanQuestionComposable>
                break;
            case QuestionType.MultiChoice:
                <MultiChoiceQuestionComposable 
                    quesitonNumber="question.QuestionNumber"
                    MainMultiChoiceQuestion="@question.question"
                    listOfMultiChoiceAnswers="question.listOfMultiChoiceQuestions"
                    SetQuestion="SetQuestion"/>
                break;
            default:
                <p>connor fucked up here</p>
                break;
        }
    }
</div>




@code{
    [Parameter]
    public List<Question>? questionList { get; set;}

    [Parameter]
    public EventCallback<Question> SetQuestion { get; set; }
}

